name: release

on:
  push:
    tags:
      - 'v*.*.*'
      - 'rc-v*'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings

jobs:

  build-ckb-bench:
    name: Build ckb-bench
    env:
      PACKAGE: ckb-bench
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-18.04
          - build: macos
            os: macos-latest
          - build: windows
            os: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: olegtarasov/get-tag@v2.1

    - name: Install windows dependencies (scoop)
      run: |
        iwr -useb get.scoop.sh -outfile 'install-scoop.ps1'
        .\install-scoop.ps1 -RunAsAdmin
        scoop install llvm
        echo "LIBCLANG_PATH=$($HOME)/scoop/apps/llvm/current/bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      if: matrix.os == 'windows-latest'

    - name: Cargo build
      run: cd ${{ env.PACKAGE }} && cargo build --release

    - name: Install p7zip
      run: brew install p7zip
      if: matrix.os == 'macos-latest'

    - name: Create artifact directory
      run: mkdir artifacts

    - name: Create archive for Linux
      run: 7z a -ttar -so -an ./${{ env.PACKAGE }}/target/release/${{ env.PACKAGE }} | 7z a -si ./artifacts/${{ env.PACKAGE }}-linux-x86_64.tar.gz
      if: matrix.os == 'ubuntu-18.04'

    - name: Create archive for Windows
      run: 7z a -tzip ./artifacts/${{ env.PACKAGE }}-windows-x86_64.zip ./${{ env.PACKAGE }}/target/release/${{ env.PACKAGE }}.exe
      if: matrix.os == 'windows-latest'

    - name: Create archive for MacOS
      run: 7z a -tzip ./artifacts/${{ env.PACKAGE }}-mac-x86_64.zip ./${{ env.PACKAGE }}/target/release/${{ env.PACKAGE }}
      if: matrix.os == 'macos-latest'

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: ${{ runner.os }}
        path: artifacts/

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build-ckb-bench ]
    steps:
    - uses: actions/checkout@v2
    - uses: olegtarasov/get-tag@v2.1

    - run: mkdir artifacts/

    - name: Download artifacts
      uses: actions/download-artifact@v2

    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          ./Linux/ckb-bench-*
          ./Windows/ckb-bench-*
          ./macOS/ckb-bench-*
